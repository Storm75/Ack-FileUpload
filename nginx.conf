worker_processes 2;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    charset utf-8;

    # All the Tornado servers here
    upstream backends {
        server 127.0.0.1:8888;
    }

    #include /path/to/nginx.mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;

    keepalive_timeout  65;
    proxy_read_timeout 200;
    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;
    gzip               on;
    gzip_min_length    1000;
    gzip_proxied       any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;


    # HTTP --> HTTPS redirect
    server {
      listen               80;
      server_name          localhost;
      return               301 https://$server_name$request_uri;
    }

    #Â HTTPS config
    server {
        listen              443 default_server ssl;
        server_name         localhost;
        ssl_certificate     example.crt;
        ssl_certificate_key example.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # Tornado server
        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://backends;
        }
    }
}
